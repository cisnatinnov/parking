<!-- Main content -->
<section class="content" id="lists">
	<!-- Small boxes (Stat box) -->
	<div class="row">
		<div class="col-lg-12">
			<div class="box">
				<div class="box-header">
					<div class="box-tools">
						<div class="row">
							<div class="col-sm-2">
								<select v-model="perPage" class="login_form">
									<option value="10">10</option>
									<option value="25">25</option>
									<option value="50">50</option>
									<option value="100">100</option>
								</select>
							</div>
							<div class="col-sm-3">
								<input type="date" name="start_date_search" class="login_form input-sm pull-right" style="width: 150px;" placeholder="Dari Tanggal" v-model="startDate"/>
							</div>
							<div class="col-sm-3">
								<input type="date" name="end_date_search" class="login_form input-sm pull-right" style="width: 150px;" placeholder="Sampai Tanggal" v-model="endDate"/>
							</div>
							<div class="col-sm-4">
								<input type="text" name="table_search" class="login_form input-sm pull-right" style="width: 150px;" placeholder="Cari" v-model="searchKey"/>
							</div>
						</div>
					</div>
				</div>
				<div class="box-body">
					<table class="table table-bordered">
						<thead>
							<tr>
								<th style="width: 50px" class="text-center">#
									<a href="" @click.prevent="sort('no')" class="pull-right"><i class="fa fa-arrows-v"></i></a>
								</th>
								<th class="text-center">
									Plat Nomor
									<a href="" @click.prevent="sort('motorcycle_number')" class="pull-right"><i class="fa fa-arrows-v"></i></a>
								</th>
								<th class="text-center">
									Persentase (%)
									<a href="" @click.prevent="sort('persen')" class="pull-right"><i class="fa fa-arrows-v"></i></a>
								</th>
								<th style="width: 100px" class="text-center">
									Total Tarif
									<a href="" @click.prevent="sort('rate')" class="pull-right"><i class="fa fa-arrows-v"></i></a>
								</th>
								<th style="width: 100px" class="text-center">
									Tarif
									<a href="" @click.prevent="sort('rate')" class="pull-right"><i class="fa fa-arrows-v"></i></a>
								</th>
								<th style="width: 100px" class="text-center">
									Keuntungan
									<a href="" @click.prevent="sort('benefits')" class="pull-right"><i class="fa fa-arrows-v"></i></a>
								</th>
								<th class="text-center">Status</th>
								<th class="text-center">
									Tanggal
									<a href="" @click.prevent="sort('create_at')" class="pull-right"><i class="fa fa-arrows-v"></i></a>
								</th>
                <th></th>
							</tr>
						</thead>
						<tbody>
							<tr v-for="(o, i) in sortfiltered_motorcycle">
								<td class="text-center" v-html="o.no"></td>
								<td v-html="o.motorcycle_number"></td>
								<td v-html="o.persen" class="text-right"></td>
								<td v-html="o.total_rate" class="text-right"></td>
								<td v-html="o.rate" class="text-right"></td>
								<td v-html="o.benefit" class="text-right"></td>
								<td v-html="o.status"></td>
								<td v-html="o.create_at"></td>
								<td><a href="" @click.prevent="detail(o.motorcycle_id)" class="btn btn-info"><i class="fa fa-info"></i></a></td>
							</tr>
						</tbody>
						<tfoot v-if="lists">
							<tr>
								<td colspan="4" class="text-center">Total</td>
								<td colspan="4"><b v-html="benefit" class="pull-right"></b></td>
							</tr>
						</tfoot>					
					</table>
				</div>				
				<div class="box-footer clearfix" v-if="!detailMotor">
					<ul class="pagination pagination-sm no-margin pull-right">
						<li><a href="#" @click.prevent="prevPage">&laquo;</a></li>
						<li v-for="p in totalPages"><a href="#" @click.prevent="page(p)" v-if="Math.abs(p - currentPage)<5||p==1||p==totalPages-1">{{ p }}</a></li>
						<li><a href="#" @click.prevent="nextPage">&raquo;</a></li>
					</ul>
				</div>
			</div>
		</div>
    <div class="col-lg-6" v-if="detailMotor">
      <div class="box">
				<div class="box-body">
					<div class="row">
						<div class="col-lg-4">
							<label>Plat Nomor</label>
							<input type="text" class="form-control" v-model="motorDetail.number" disabled>
						</div>
						<div class="col-lg-4">
							<label>Merk</label>
							<input type="text" class="form-control" v-model="motorDetail.merk" disabled>
						</div>
						<div class="col-lg-4">
							<label>Tipe</label>
							<input type="text" class="form-control" v-model="motorDetail.type" disabled>
						</div>
					</div>
					<div class="row">
						<div class="col-lg-4">
							<label>Tarif/Jam</label>
							<input type="text" class="form-control" value="1000" disabled>
						</div>
						<div class="col-lg-4">
							<label>Jam Masuk</label>
							<input type="text" class="form-control" v-model="motorDetail.in" disabled>
						</div>
						<div class="col-lg-4">
							<label>Jam Keluar</label>
							<input type="text" class="form-control" v-model="motorDetail.out" disabled>
						</div>
					</div>
        </div>
				<div class="box-footer clearfix">
					<a href="" @click.prevent="close" class="btn btn-sm btn-danger pull-right"><i class="fa fa-times"></i> Tutup</a>
        </div>
      </div>
    </div>
	</div>
</section>
	<!-- /Main content -->
<script>
	var lists = new Vue({
		el: '#lists',
		data: {
			lists: [],
			perPage: 10,
			searchKey: '',
			total: 0,
			currentSort:'no',
			currentSortDir: 'desc',
			pageSize:10,
			currentPage:1,
			startDate: '',
			endDate: '',
			benefit: 0,
			detailMotor: false,
			motorDetail: {}
		},
		watch: {
			perPage: {
				immediate: true,
				deep: true,
				handler(nv) {
					if (nv==0) return;
					this.pageSize = nv;
				}
			},
      startDate: {
        immediate: true,
        deep: true,
        handler(nv) {
          this.reload();
				}
			},
      endDate: {
        immediate: true,
        deep: true,
        handler(nv) {
          this.reload();					
				}
			}
		},
		computed: {
			totalPages() {
        return Math.ceil(this.total / this.pageSize);
      },
			sortfiltered_motorcycle() {
				return this.lists.sort((a,b) => {
					let modifier = 1;
					if(this.currentSortDir === 'asc') modifier = -1;
					if(a[this.currentSort] < b[this.currentSort]) return -1 * modifier;
          if(a[this.currentSort] > b[this.currentSort]) return 1 * modifier;
          return 0;
				}).filter((row, index) => {
          let start = (this.currentPage-1)*this.pageSize;
					let end = this.currentPage*this.pageSize;
					
					if (!_.isEmpty(this.searchKey)) {
						if (index >= start && index < end &&
							(_.includes(_.lowerCase(row.motorcycle_number), _.lowerCase(this.searchKey)) ||
								_.includes(row.persen, this.searchKey) ||
								_.includes(row.rate, this.searchKey) ||
								_.includes(row.benefits, this.searchKey)||
								_.includes(_.lowerCase(row.status), _.lowerCase(this.searchKey)) ||
								_.includes(row.create_at, this.searchKey)
							)
						) return true;
					}
					else {
						if (index >= start && index < end) return true;
					}          
        })
			}
		},
		methods: {
			reload() {
				let vm = this, lists = [], data = {
					startDate: vm.startDate,
					endDate: vm.endDate
				};

				axios.post('/motorcycle_reports/lists', data).then((res) => {
					lists = res.data.data
					vm.lists = lists;
					vm.total = vm.lists.length;
					vm.benefit = res.data.benefit;
				})
			},
			sort(s) {
        //if s == current sort, reverse
        if(s === this.currentSort) {
          this.currentSortDir = this.currentSortDir==='asc'?'desc':'asc';
        }
        this.currentSort = s;
			},
			page(p) {
        this.currentPage = p;
      },
      prevPage() {
        if(this.currentPage > 1) this.currentPage--;
			},
			nextPage() {
        if(this.currentPage > 1) this.currentPage++;
			},
			detail(id) {
				this.detailMotor = true;
				axios.get('motorcycle_reports/getMotorCycle/'+id).then((res) => {
					this.motorDetail = res.data.data;
				})
				.catch((error) => {
          console.log(error);
				});
			},
			close() {
				this.detailMotor = false,
				this.motorDetail = {}
			}
		},
		mounted() {
			let vm = this;
			vm.reload();
		}
	})
</script>