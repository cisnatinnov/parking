<!-- Main content -->
<section class="content" id="lists">
	<!-- Small boxes (Stat box) -->
	<div class="row">
		<div :class="{ 'col-lg-12': !detailUser, 'col-lg-6': detailUser }">
			<div class="box">
				<div class="box-header">
					<div class="box-tools">
						<div class="row">
							<div class="col-sm-2">
								<select v-model="perPage" class="login_form">
									<option value="10">10</option>
									<option value="25">25</option>
									<option value="50">50</option>
									<option value="100">100</option>
								</select>
							</div>
							<div class="col-sm-10">
								<input type="text" name="table_search" class="login_form input-sm pull-right" style="width: 150px;" placeholder="cari" v-model="searchKey"/>
								<a href="#" @click.prevent="add" class="btn btn-sm btn-success pull-right"><i class="fa fa-plus"></i></a>
							</div>
						</div>
					</div>
				</div>
				<div class="box-body">
					<table class="table table-bordered">
						<thead>
							<tr>								
								<th style="width: 50px" class="text-center">#
									<a href="" @click.prevent="sort('no')" class="pull-right"><i class="fa fa-arrows-v"></i></a>
								</th>
								<th class="text-center">
									Nama
									<a href="" @click.prevent="sort('full_name')" class="pull-right"><i class="fa fa-arrows-v"></i></a>
								</th>
								<th class="text-center">
									Email
									<a href="" @click.prevent="sort('email')" class="pull-right"><i class="fa fa-arrows-v"></i></a>
								</th>
								<th class="text-center">
									Akses
									<a href="" @click.prevent="sort('access')" class="pull-right"><i class="fa fa-arrows-v"></i></a>
								</th>
								<th class="text-center">
									Password
								</th>
								<th></th>
							</tr>
						</thead>
						<tbody>
							<tr v-for="(o, i) in sortfiltered_user">
								<td class="text-center" v-html="o.no"></td>
								<td v-html="o.full_name"></td>
								<td v-html="o.email"></td>
								<td>{{ access(o.access_id) }}</td>
								<td v-html="o.password"></td>
								<td class="text-center">
									<a href="" @click.prevent="edit(o)" class="btn btn-sm btn-warning">
										<i class="fa fa-pencil"></i>
									</a>
									<a href="" @click.prevent="detail(o)" class="btn btn-sm btn-info"><i class="fa fa-info"></i></a>
									<a href="" @click.prevent="out(o)" class="btn btn-sm btn-danger"><i class="fa fa-eraser"></i></a>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
		</div>
		<div class="col-lg-6" v-if="detailUser">
			<div class="box">
				<div class="box-header">
					<h4 for="label" v-html="label"></h4>
					<p v-if="isValid" style="color: green;">{{ message }}</p>
					<p v-if="!isValid" style="color: red;">{{ message }}</p>
				</div>
				<div class="box-body">
					<div class="row">
						<div class="col-lg-4">
							<label>Email *</label>
							<input type="email" class="form-control" v-model="userDetail.email" :disabled="disabled" required>
						</div>
						<div class="col-lg-4">
							<label>password *</label>
							<input type="password" class="form-control" v-model="userDetail.password" :disabled="disabled" required>
						</div>
						<div class="col-lg-4">
							<label>Akses *</label>
							<select v-model="userDetail.access_id" class="form-control">
								<option value="1">Admin</option>
								<option value="2">Keuangan</option>
								<option value="3">Petugas</option>
							</select>
						</div>					
					</div>
					<div class="row">
						<div class="col-lg-12">
							<label>Nama Lengkap *</label>
							<input type="email" class="form-control" v-model="userDetail.full_name" disabled>
						</div>				
					</div>
					<div class="row">
						<div class="col-lg-4">
							<label>Nama Depan *</label>
							<input type="text" class="form-control" v-model="personDetail.first_name" :disabled="disabled" required>
						</div>
						<div class="col-lg-4">
							<label>Nama Tengah</label>
							<input type="text" class="form-control" v-model="personDetail.middle_name" :disabled="disabled" required>
						</div>
						<div class="col-lg-4">
							<label>Nama Belakang</label>
							<input type="text" class="form-control" v-model="personDetail.last_name" :disabled="disabled" required>
						</div>		
					</div>
					<div class="row">
						<div class="col-lg-4">
							<label>Tempat Lahir *</label>
							<input type="text" class="form-control" v-model="personDetail.birth_place" :disabled="disabled" required>
						</div>
						<div class="col-lg-4">
							<label>Tanggal Lahir *</label>
							<input type="date" class="form-control" v-model="personDetail.birth_date" :disabled="disabled" required>
						</div>	
					</div>
					<div class="row">
						<div class="col-lg-12">
							<label>Alamat *</label>
							<textarea rows="3" cols="2" v-model="personDetail.address" class="form-control" :disabled="disabled" required></textarea>
						</div>
					</div>
					<div class="row">
						<div class="col-lg-4">
							<label>Desa/Kelurahan *</label>
							<input type="text" v-model="personDetail.village" class="form-control" :disabled="disabled" required>
						</div>
						<div class="col-lg-4">
							<label>Kecamatan *</label>
							<input type="text" v-model="personDetail.districts" class="form-control" :disabled="disabled" required>
						</div>
						<div class="col-lg-4">
							<label>Kota/Kabupaten *</label>
							<input type="text" v-model="personDetail.city" class="form-control" :disabled="disabled" required>
						</div>
					</div>
					<div class="row">
						<div class="col-lg-8">
							<label>Provinsi *</label>
							<input type="text" v-model="personDetail.province" class="form-control" :disabled="disabled" required>
						</div>
						<div class="col-lg-4">
							<label>Kode Pos *</label>
							<input type="text" v-model="personDetail.pos_code" class="form-control" :disabled="disabled" required>
						</div>
					</div>
				</div>
				<div class="box-footer clearfix">
					<a href="" @click.prevent="close" class="btn btn-sm btn-danger pull-right"><i class="fa fa-times"></i> Tutup</a>				
					<button href="" @click.prevent="save" class="btn btn-sm btn-primary pull-right" v-if="label!=='Detail'">
						<i class="fa fa-save"></i>
						Simpan
					</button>
				</div>
			</div>
		</div>
	</div>
</section>
<script>
	var lists = new Vue({
		el: '#lists',
		data: {
			lists: [],
			detailUser: false,
			perPage: 10,
			searchKey: '',
			total: 0,
			currentSort:'no',
			currentSortDir: 'desc',
			pageSize:10,
			currentPage:1,
			label: '',
			userDetail: {},
			personDetail: {},
			date: '',
			disabled: false,
			message: '',
			isValid: true
		},
		watch: {
			perPage: {
				immediate: true,
				deep: true,
				handler(nv) {
					if (nv==0) return;
					this.pageSize = nv;
				}
			},
			userDetail: {
				immediate: true,
				deep: true,
				handler(nv) {
					let vm = this;
					if (!_.isEmpty(nv)) {
						vm.message = 'Email valid';
						vm.isValid = true;
						if (!vm.emailValidate(nv.email)) {
							vm.message = 'Email tidak valid';
							vm.isValid = false;
						}
					}
				}
			},
			personDetail: {
				immediate: true,
				deep: true,
				handler(nv) {
					if (_.isEmpty(nv)) return;
					let full_name = nv.first_name;
					if (!_.isEmpty(nv.middle_name)) full_name += " "+nv.middle_name;
					if (!_.isEmpty(nv.last_name)) full_name += " "+nv.last_name;
					this.userDetail.full_name = full_name;
				}
			}
		},
		computed: {
			totalPages() {
        return Math.ceil(this.total / this.pageSize);
      },
			sortfiltered_user() {
				return this.lists.sort((a,b) => {
					let modifier = 1;
					if(this.currentSortDir === 'asc') modifier = -1;
					if(a[this.currentSort] < b[this.currentSort]) return -1 * modifier;
          if(a[this.currentSort] > b[this.currentSort]) return 1 * modifier;
          return 0;
				}).filter((row, index) => {
          let start = (this.currentPage-1)*this.pageSize;
					let end = this.currentPage*this.pageSize;
					
					if (!_.isEmpty(this.searchKey)) {
						if (index >= start && index < end &&
							(_.includes(_.lowerCase(row.full_name), _.lowerCase(this.searchKey)) ||
								_.includes(row.email, this.searchKey) ||
								_.includes(row.password, this.searchKey) ||
								_.includes(row.create_at, this.searchKey)
							)
						) return true;
					}
					else {
						if (index >= start && index < end) return true;
					}          
        })
			},
		},
		methods: {
			addZero(i) {
				if (i < 10) {
					i = "0"+ i;
				}
				return i;
			},
			reload() {
				let vm = this;
				vm.detailUser = false;
				axios.get('/users/lists').then((res) => {
					lists = res.data.data
					vm.lists = lists;
				})
				.catch((error) => {
          console.log(error);
				});
			},
			sort(s) {
        //if s == current sort, reverse
        if(s === this.currentSort) {
          this.currentSortDir = this.currentSortDir==='asc'?'desc':'asc';
        }
        this.currentSort = s;
			},
			page(p) {
        this.currentPage = p;
      },
      prevPage() {
        if(this.currentPage > 1) this.currentPage--;
			},
			nextPage() {
        if(this.currentPage > 1) this.currentPage++;
			},
			add() {
				let vm = this, d = new Date();
				vm.label = 'Tambah';
				vm.detailUser = true;
				vm.userDetail = {};
				vm.personDetail = {};
				vm.disabled = false;

				vm.date = d.getFullYear()+"-"+vm.addZero(d.getMonth()+1)+"-"+vm.addZero(d.getDate());
			},
			edit(o) {
				let vm = this, d = new Date();
				vm.label = 'Ubah';
				vm.detailUser = true;
				vm.userDetail = o;
				vm.personDetail = o;
				vm.disabled = false;
				vm.getPerson(o.id);

				vm.date = d.getFullYear()+"-"+vm.addZero(d.getMonth()+1)+"-"+vm.addZero(d.getDate());
			},
			detail(o) {
				let vm = this, d = new Date();
				vm.label = 'Detail';
				vm.detailUser = true;
				vm.userDetail = o;
				vm.personDetail = o;
				vm.disabled = true;
				vm.getPerson(o.id);

				vm.date = d.getFullYear()+"-"+vm.addZero(d.getMonth()+1)+"-"+vm.addZero(d.getDate());
			},
			close() {
				let vm = this;
				vm.label = '';
				vm.detailUser = false;
				vm.userDetail = {};
				vm.personDetail = {};
				vm.disabled = false;

				vm.date = '';
			},
			save() {
				let vm = this, data = {};
				data = {
					label: vm.label,
					userDetail: vm.userDetail,
					personDetail: vm.personDetail,
					date: vm.date
				}
				if (!isValid) {
					vm.message = "Harus diisi";
					return;
				}
				axios.post('users/save', data).then((res) => {
					if (res.data.result=='success') {
            vm.reload();
          }
				})
				.catch((error) => {
          console.log(error);
				});
			},
			access(acc) {
				return (acc==1)? "Admin": (acc==2)? "Keuangan": "Petugas";
			},
			emailValidate(email) {
				var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
				return re.test(email);
			},
			getPerson(id) {
				axios.get('users/getPerson/'+id).then((res) => {
					this.personDetail = res.data.data;
				})
				.catch((error) => {
          console.log(error);
				});
			}
		},
		mounted() {
			let vm = this;
			vm.reload();
		}
	})
</script>